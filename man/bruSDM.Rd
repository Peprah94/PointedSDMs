% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bruSDM.R
\name{bruSDM}
\alias{bruSDM}
\title{bruSDM: integrated model data object.}
\usage{
bruSDM(
  ...,
  spatialCovariates = NULL,
  Coordinates,
  Projection,
  Boundary = NULL,
  Mesh,
  IPS = NULL,
  speciesSpatial = TRUE,
  markNames = NULL,
  markFamily = NULL,
  pointCovariates = NULL,
  pointsIntercept = TRUE,
  marksIntercept = TRUE,
  pointsSpatial = TRUE,
  marksSpatial = TRUE,
  responseCounts = "counts",
  responsePA = "present",
  trialsPA = NULL,
  trialsMarks = NULL,
  speciesName = NULL,
  temporalName = NULL,
  temporalModel = list(model = "ar1")
)
}
\arguments{
\item{...}{The datasets to be used in the model. May come as either a \code{data.frame} or \code{SpatialPoints*}, or as a list of datasets inheriting the mentioned classes.}

\item{spatialCovariates}{The spatial covariates used in the model. These covariates must be measured at every location (pixel) in the study area, and must be a \code{Raster*} or \code{SpatialPixelsDataFrame} object.}

\item{Coordinates}{A vector of length 2 containing the names of the coordinate variables used in the model.}

\item{Projection}{Projection used for the data and spatial covariates. Must be of class \code{CRS}.}

\item{Boundary}{##NOT USED YET.}

\item{Mesh}{An \code{inla.mesh} object.}

\item{IPS}{Integration points to be used in the model. Defaults to \code{NULL} which will create integration points from the \code{inla.mesh} object.}

\item{speciesSpatial}{Logical argument: should the species have their own spatial fields. Defaults to \code{TRUE}.}

\item{markNames}{A vector with the mark names to be included in the integrated model. These marks must be in the same data objects as the points.}

\item{markFamily}{A vector with the statistical families of the marks. Must be the same length as markNames, and the position of the mark in the vector \code{markName} is associated with the position of the family in \code{markFamily}. Defaults to \code{NULL} which assigns each mark as "Gaussian".}

\item{pointCovariates}{The non-spatial covariates to be included in the integrated model. These covariates must be included in the same data object as the points.}

\item{pointsIntercept}{Logical argument: should the points be modeled with intercepts. Defaults to \code{TRUE}.}

\item{marksIntercept}{Logical argument: should the marks be modeled with intercepts. Defaults to \code{TRUE}.}

\item{pointsSpatial}{Logical argument: should the points have a shared spatial field. Defaults to \code{TRUE}.}

\item{marksSpatial}{Logical argument: should the marks have their own spatial field. Defaults to \code{TRUE}.}

\item{responseCounts}{Name of the response variable in the counts datasets. This variable name needs to be standardized across all counts datasets used in the integrated model. Defaults to \code{'counts'}.}

\item{responsePA}{Name of the response variable in the presence absence datasets. This variable name needs to be standardized across all present absence datasets. Defaults to \code{'present'}.}

\item{trialsPA}{Name of the trials response variable for the presence absence datasets. Defaults to \code{NULL}.}

\item{trialsMarks}{Name of the trials response variable for the binomial marks. Defaults to \code{NULL}.}

\item{speciesName}{Name of the species variable name. Specifying this argument calculates covariate values for the individual species, as well as including a spatial group model for the species. Defaults to \code{NULL}}

\item{temporalName}{Name of the temporal variable in the model. This variable is required to be in all the datasets. Defaults to \code{NULL}.}

\item{temporalModel}{List of model specifications given to the control.group argument in the time effect component.}
}
\value{
A dataSDM object. Use ?dataSDM to see all the slot functions related to this object.
}
\description{
This function is used to create a \code{bruSDM} object containing all the relevant data and meta-data to be used in the integrated distribution model.
}
\examples{

\dontrun{

#Specify whats needed

dataset1 <- data.frame(...)
dataset2 <- sp::SpatialPointsDataFrame(...)

mesh <- inla.mesh.2d(...)
spatiialCovariates <- raster::raster(...)
Projection <- CRS(...)
Coords <- c('Long', 'Lat')

#Run function

object <- bruSDM(dataset1, dataset2, Mesh = Mesh,
                 spatialCovariates = spatialCovariates, Coords = Coords,
                 Projection = Projection)
                 
#Return summary of data

object

}

}
